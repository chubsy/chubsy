{"ast":null,"code":"import _classCallCheck from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./styles/travel.less';import*as am4core from\"@amcharts/amcharts4/core\";import*as am4maps from\"@amcharts/amcharts4/maps\";import am4themes_animated from\"@amcharts/amcharts4/themes/animated\";import am4geodata_worldLow from\"@amcharts/amcharts4-geodata/worldLow\";import worldData from'./initialData';var Travel=/*#__PURE__*/function(_Component){_inherits(Travel,_Component);function Travel(props){var _this;_classCallCheck(this,Travel);_this=_possibleConstructorReturn(this,_getPrototypeOf(Travel).call(this,props));_this.showModal=function(){_this.setState({show:true});};_this.hideModal=function(){_this.setState({show:false});};_this.state={show:false};_this.changeCountry=_this.changeCountry.bind(_assertThisInitialized(_this));return _this;}_createClass(Travel,[{key:\"changeCountry\",value:function changeCountry(polygonTemplate){polygonTemplate.events.on(\"hit\",function(ev){var country=ev.target.dataItem.dataContext.id;// if(worldData[country] != undefined) {\n//   Object.keys()\n// }\nconsole.log(country);console.log(worldData[country]);});}},{key:\"componentDidMount\",value:function componentDidMount(){am4core.useTheme(am4themes_animated);var map=am4core.create(\"travel-map\",am4maps.MapChart);// Set map definition\nmap.geodata=am4geodata_worldLow;// Set projection\nmap.projection=new am4maps.projections.Miller();map.maxZoomLevel=1;map.seriesContainer.draggable=false;map.seriesContainer.resizable=false;// Create map polygon series\nvar polygonSeries=map.series.push(new am4maps.MapPolygonSeries());// Make map load polygon (like country names) data from GeoJSON\npolygonSeries.useGeodata=true;//\n// Configure series\nvar polygonTemplate=polygonSeries.mapPolygons.template;polygonTemplate.tooltipText=\"{name}\";polygonTemplate.fill=am4core.color(\"#BDA0C3\");this.changeCountry(polygonTemplate);// Create hover state and set alternative fill color\nvar hs=polygonTemplate.states.create(\"hover\");hs.properties.fill=am4core.color(\"#A571B0\");}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"travel\"},React.createElement(\"div\",{className:\"travel-description\"},\"love the world around you!\"),React.createElement(\"div\",{className:\"travel-map\"}));}}]);return Travel;}(Component);export default Travel;","map":{"version":3,"sources":["/Users/chloeshiau/Documents/chubsy/src/travel/travel.jsx"],"names":["React","Component","am4core","am4maps","am4themes_animated","am4geodata_worldLow","worldData","Travel","props","showModal","setState","show","hideModal","state","changeCountry","bind","polygonTemplate","events","on","ev","country","target","dataItem","dataContext","id","console","log","useTheme","map","create","MapChart","geodata","projection","projections","Miller","maxZoomLevel","seriesContainer","draggable","resizable","polygonSeries","series","push","MapPolygonSeries","useGeodata","mapPolygons","template","tooltipText","fill","color","hs","states","properties"],"mappings":"4tBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAO,sBAAP,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,0BAAzB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,qCAA/B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,sCAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,eAAtB,C,GAEMC,CAAAA,M,gEACJ,gBAAYC,KAAZ,CAAmB,wCACjB,wEAAMA,KAAN,GADiB,MASnBC,SATmB,CASP,UAAM,CAChB,MAAKC,QAAL,CAAc,CAAEC,IAAI,CAAE,IAAR,CAAd,EACD,CAXkB,OAanBC,SAbmB,CAaP,UAAM,CAChB,MAAKF,QAAL,CAAc,CAAEC,IAAI,CAAE,KAAR,CAAd,EACD,CAfkB,CAEjB,MAAKE,KAAL,CAAa,CACXF,IAAI,CAAE,KADK,CAAb,CAIA,MAAKG,aAAL,CAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB,CANiB,aAOlB,C,uEAUaC,e,CAAiB,CAC7BA,eAAe,CAACC,MAAhB,CAAuBC,EAAvB,CAA0B,KAA1B,CAAiC,SAASC,EAAT,CAAa,CAC5C,GAAMC,CAAAA,OAAO,CAAGD,EAAE,CAACE,MAAH,CAAUC,QAAV,CAAmBC,WAAnB,CAA+BC,EAA/C,CACA;AACA;AACA;AACAC,OAAO,CAACC,GAAR,CAAYN,OAAZ,EACAK,OAAO,CAACC,GAAR,CAAYpB,SAAS,CAACc,OAAD,CAArB,EACD,CAPD,EAQD,C,6DAEmB,CAClBlB,OAAO,CAACyB,QAAR,CAAiBvB,kBAAjB,EACA,GAAIwB,CAAAA,GAAG,CAAG1B,OAAO,CAAC2B,MAAR,CAAe,YAAf,CAA6B1B,OAAO,CAAC2B,QAArC,CAAV,CACA;AACAF,GAAG,CAACG,OAAJ,CAAc1B,mBAAd,CAEA;AACAuB,GAAG,CAACI,UAAJ,CAAiB,GAAI7B,CAAAA,OAAO,CAAC8B,WAAR,CAAoBC,MAAxB,EAAjB,CAEAN,GAAG,CAACO,YAAJ,CAAmB,CAAnB,CACAP,GAAG,CAACQ,eAAJ,CAAoBC,SAApB,CAAgC,KAAhC,CACAT,GAAG,CAACQ,eAAJ,CAAoBE,SAApB,CAAgC,KAAhC,CAEA;AACA,GAAMC,CAAAA,aAAa,CAAGX,GAAG,CAACY,MAAJ,CAAWC,IAAX,CAAgB,GAAItC,CAAAA,OAAO,CAACuC,gBAAZ,EAAhB,CAAtB,CAEA;AACAH,aAAa,CAACI,UAAd,CAA2B,IAA3B,CACA;AACA;AACA,GAAM3B,CAAAA,eAAe,CAAGuB,aAAa,CAACK,WAAd,CAA0BC,QAAlD,CACA7B,eAAe,CAAC8B,WAAhB,CAA8B,QAA9B,CACA9B,eAAe,CAAC+B,IAAhB,CAAuB7C,OAAO,CAAC8C,KAAR,CAAc,SAAd,CAAvB,CACA,KAAKlC,aAAL,CAAmBE,eAAnB,EAEA;AACA,GAAMiC,CAAAA,EAAE,CAAGjC,eAAe,CAACkC,MAAhB,CAAuBrB,MAAvB,CAA8B,OAA9B,CAAX,CACAoB,EAAE,CAACE,UAAH,CAAcJ,IAAd,CAAqB7C,OAAO,CAAC8C,KAAR,CAAc,SAAd,CAArB,CACD,C,uCAEQ,CACP,MACE,4BAAK,SAAS,CAAC,QAAf,EACE,2BAAK,SAAS,CAAC,oBAAf,+BADF,CAEE,2BAAK,SAAS,CAAC,YAAf,EAFF,CADF,CAOD,C,oBAnEkB/C,S,EAsErB,cAAeM,CAAAA,MAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './styles/travel.less';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport worldData from './initialData';\n\nclass Travel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n    };\n\n    this.changeCountry = this.changeCountry.bind(this);\n  }\n\n  showModal = () => {\n    this.setState({ show: true });\n  }\n\n  hideModal = () => {\n    this.setState({ show: false });\n  }\n\n  changeCountry(polygonTemplate) {\n    polygonTemplate.events.on(\"hit\", function(ev) {\n      const country = ev.target.dataItem.dataContext.id;\n      // if(worldData[country] != undefined) {\n      //   Object.keys()\n      // }\n      console.log(country);\n      console.log(worldData[country]);\n    });\n  }\n\n  componentDidMount() {\n    am4core.useTheme(am4themes_animated);\n    let map = am4core.create(\"travel-map\", am4maps.MapChart);\n    // Set map definition\n    map.geodata = am4geodata_worldLow;\n\n    // Set projection\n    map.projection = new am4maps.projections.Miller();\n\n    map.maxZoomLevel = 1;\n    map.seriesContainer.draggable = false;\n    map.seriesContainer.resizable = false;\n\n    // Create map polygon series\n    const polygonSeries = map.series.push(new am4maps.MapPolygonSeries());\n\n    // Make map load polygon (like country names) data from GeoJSON\n    polygonSeries.useGeodata = true;\n    //\n    // Configure series\n    const polygonTemplate = polygonSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.fill = am4core.color(\"#BDA0C3\");\n    this.changeCountry(polygonTemplate);\n\n    // Create hover state and set alternative fill color\n    const hs = polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"#A571B0\");\n  }\n\n  render() {\n    return (\n      <div className=\"travel\">\n        <div className=\"travel-description\">love the world around you!</div>\n        <div className=\"travel-map\"></div>\n      </div>\n\n    );\n  }\n}\n\nexport default Travel;\n"]},"metadata":{},"sourceType":"module"}