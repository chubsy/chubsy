{"ast":null,"code":"import _classCallCheck from\"/Users/chloeshiau/Pictures/chubsy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/chloeshiau/Pictures/chubsy/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/chloeshiau/Pictures/chubsy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/chloeshiau/Pictures/chubsy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/chloeshiau/Pictures/chubsy/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/chloeshiau/Pictures/chubsy/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Modal from'react-modal';import TravelCountryEl from'./src/travelCountryEl/travelCountryEl';import'./styles/travel.less';import*as am4core from\"@amcharts/amcharts4/core\";import*as am4maps from\"@amcharts/amcharts4/maps\";import am4themes_animated from\"@amcharts/amcharts4/themes/animated\";import am4geodata_worldLow from\"@amcharts/amcharts4-geodata/worldLow\";import worldData from'./initialData';var Travel=/*#__PURE__*/function(_Component){_inherits(Travel,_Component);function Travel(props){var _this;_classCallCheck(this,Travel);_this=_possibleConstructorReturn(this,_getPrototypeOf(Travel).call(this,props));_this.state={showModal:false,showCountry:\"\"};_this.changeCountry=_this.changeCountry.bind(_assertThisInitialized(_this));_this.createModal=_this.createModal.bind(_assertThisInitialized(_this));_this.hideModal=_this.hideModal.bind(_assertThisInitialized(_this));return _this;}_createClass(Travel,[{key:\"componentDidMount\",value:function componentDidMount(){am4core.useTheme(am4themes_animated);var map=am4core.create(\"travel-map\",am4maps.MapChart);// Set map definition\nmap.geodata=am4geodata_worldLow;// Set projection\nmap.projection=new am4maps.projections.Miller();map.maxZoomLevel=1;map.seriesContainer.draggable=false;map.seriesContainer.resizable=false;// Create map polygon series\nvar polygonSeries=map.series.push(new am4maps.MapPolygonSeries());polygonSeries.data=[{\"id\":\"US\",\"selected\":true},{\"id\":\"JP\",\"selected\":true},{\"id\":\"CN\",\"selected\":true},{\"id\":\"ID\",\"selected\":true},{\"id\":\"FR\",\"selected\":true},{\"id\":\"TW\",\"selected\":true},{\"id\":\"IT\",\"selected\":true},{\"id\":\"ES\",\"selected\":true},{\"id\":\"GR\",\"selected\":true},{\"id\":\"GB\",\"selected\":true},{\"id\":\"CH\",\"selected\":true},{\"id\":\"NL\",\"selected\":true},{\"id\":\"TH\",\"selected\":true},{\"id\":\"MX\",\"selected\":true},{\"id\":\"KR\",\"selected\":true},{\"id\":\"CA\",\"selected\":true},{\"id\":\"DK\",\"selected\":true}];// Make map load polygon (like country names) data from GeoJSON\npolygonSeries.useGeodata=true;// Configure series\nvar polygonTemplate=polygonSeries.mapPolygons.template;polygonTemplate.tooltipText=\"{name}\";polygonTemplate.fill=am4core.color(\"#CCBBCE\");this.changeCountry(polygonTemplate);polygonTemplate.adapter.add(\"fill\",function(fill,target){if(target.dataItem.dataContext&&target.dataItem.dataContext.selected){return am4core.color(\"#A571B0\");}return fill;});}},{key:\"changeCountry\",value:function changeCountry(polygonTemplate){var self=this;polygonTemplate.events.on(\"hit\",function(ev){var country=ev.target.dataItem.dataContext.id;if(worldData[country]!=undefined){self.setState({showModal:true,showCountry:country});}});}},{key:\"createModal\",value:function createModal(){return React.createElement(Modal,{className:\"travel-modal\",isOpen:this.state.showModal,onRequestClose:this.hideModal,contentLabel:\"Example Modal\"},React.createElement(TravelCountryEl,{countryData:worldData[this.state.showCountry],currentCountry:this.state.showCountry}));}},{key:\"hideModal\",value:function hideModal(){this.setState({showModal:false});}},{key:\"render\",value:function render(){var countryModal=this.state.showModal?this.createModal():\"\";return React.createElement(\"div\",{className:\"travel\"},React.createElement(\"div\",{className:\"travel-description\"},\"love the world around you!\"),React.createElement(\"div\",{className:\"travel-map\"}),countryModal);}}]);return Travel;}(Component);export default Travel;","map":{"version":3,"sources":["/Users/chloeshiau/Pictures/chubsy/src/travel/travel.jsx"],"names":["React","Component","Modal","TravelCountryEl","am4core","am4maps","am4themes_animated","am4geodata_worldLow","worldData","Travel","props","state","showModal","showCountry","changeCountry","bind","createModal","hideModal","useTheme","map","create","MapChart","geodata","projection","projections","Miller","maxZoomLevel","seriesContainer","draggable","resizable","polygonSeries","series","push","MapPolygonSeries","data","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","fill","color","adapter","add","target","dataItem","dataContext","selected","self","events","on","ev","country","id","undefined","setState","countryModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport TravelCountryEl from './src/travelCountryEl/travelCountryEl';\n\nimport './styles/travel.less';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport worldData from './initialData';\n\nclass Travel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      showCountry: \"\",\n    };\n\n    this.changeCountry = this.changeCountry.bind(this);\n    this.createModal = this.createModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  componentDidMount() {\n    am4core.useTheme(am4themes_animated);\n    let map = am4core.create(\"travel-map\", am4maps.MapChart);\n    // Set map definition\n    map.geodata = am4geodata_worldLow;\n\n    // Set projection\n    map.projection = new am4maps.projections.Miller();\n\n    map.maxZoomLevel = 1;\n    map.seriesContainer.draggable = false;\n    map.seriesContainer.resizable = false;\n\n    // Create map polygon series\n    const polygonSeries = map.series.push(new am4maps.MapPolygonSeries());\n\n    polygonSeries.data = [{\n      \"id\": \"US\",\n      \"selected\": true\n    }, {\n      \"id\": \"JP\",\n      \"selected\": true\n    }, {\n      \"id\": \"CN\",\n      \"selected\": true\n    }, {\n      \"id\": \"ID\",\n      \"selected\": true\n    }, {\n      \"id\": \"FR\",\n      \"selected\": true\n    }, {\n      \"id\": \"TW\",\n      \"selected\": true\n    }, {\n      \"id\": \"IT\",\n      \"selected\": true\n    }, {\n      \"id\": \"ES\",\n      \"selected\": true\n    }, {\n      \"id\": \"GR\",\n      \"selected\": true\n    }, {\n      \"id\": \"GB\",\n      \"selected\": true\n    }, {\n      \"id\": \"CH\",\n      \"selected\": true\n    }, {\n      \"id\": \"NL\",\n      \"selected\": true\n    }, {\n      \"id\": \"TH\",\n      \"selected\": true\n    }, {\n      \"id\": \"MX\",\n      \"selected\": true\n    }, {\n      \"id\": \"KR\",\n      \"selected\": true\n    }, {\n      \"id\": \"CA\",\n      \"selected\": true\n    }, {\n      \"id\": \"DK\",\n      \"selected\": true\n    }];\n\n    // Make map load polygon (like country names) data from GeoJSON\n    polygonSeries.useGeodata = true;\n\n    // Configure series\n    const polygonTemplate = polygonSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.fill = am4core.color(\"#CCBBCE\");\n    this.changeCountry(polygonTemplate);\n\n    polygonTemplate.adapter.add(\"fill\", function(fill, target) {\n      if (target.dataItem.dataContext && target.dataItem.dataContext.selected) {\n        return am4core.color(\"#A571B0\");\n      }\n      return fill;\n    });\n  }\n\n  changeCountry(polygonTemplate) {\n    const self = this;\n    polygonTemplate.events.on(\"hit\", function(ev) {\n      const country = ev.target.dataItem.dataContext.id;\n      if(worldData[country] != undefined) {\n        self.setState({\n          showModal : true,\n          showCountry: country,\n        });\n      }\n    });\n  }\n\n  createModal() {\n    return (\n      <Modal\n        className=\"travel-modal\"\n        isOpen={this.state.showModal}\n        onRequestClose={this.hideModal}\n        contentLabel=\"Example Modal\"\n      >\n        <TravelCountryEl\n          countryData={worldData[this.state.showCountry]}\n          currentCountry={this.state.showCountry}\n        />\n      </Modal>\n    );\n  }\n\n hideModal() {\n   this.setState({ showModal: false });\n }\n\n  render() {\n    const countryModal = this.state.showModal ? this.createModal() : \"\";\n    return (\n      <div className=\"travel\">\n        <div className=\"travel-description\">love the world around you!</div>\n        <div className=\"travel-map\"></div>\n        {countryModal}\n      </div>\n    );\n  }\n}\n\nexport default Travel;\n"]},"metadata":{},"sourceType":"module"}