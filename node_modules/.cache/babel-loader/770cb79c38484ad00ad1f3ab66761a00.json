{"ast":null,"code":"import _toConsumableArray from\"/Users/chloeshiau/Documents/chubsy.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/chloeshiau/Documents/chubsy.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/chloeshiau/Documents/chubsy.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/chloeshiau/Documents/chubsy.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/chloeshiau/Documents/chubsy.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/chloeshiau/Documents/chubsy.github.io/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/chloeshiau/Documents/chubsy.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";// import ReactDOM from \"react-dom\";\n// import Navigation from '../Navigation/Navigation';\nimport Messages from'../Messages/Messages';import'./Home.css';var URL='ws://localhost:3000/ws';// var ws = new WebSocket(\"ws://localhost:3000/ws\");\n// WEBSOCKETS - transfers data through transmission control proticol (TCP)\n// REDUX - mapStateToProps is a function that holds whole store state\nvar MyApp=/*#__PURE__*/function(_Component){_inherits(MyApp,_Component);function MyApp(props){var _this;_classCallCheck(this,MyApp);_this=_possibleConstructorReturn(this,_getPrototypeOf(MyApp).call(this,props));_this.state={messages:[],ws:null};// this.loadResponse = this.loadResponse.bind(this);\n_this.submitMessage=_this.submitMessage.bind(_assertThisInitialized(_this));return _this;}_createClass(MyApp,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.ws=new WebSocket(URL);this.ws.onopen=function(){console.log('is connected');};this.ws.onmessage=function(msg){var message=JSON.parse(msg.data);// add to list of message\n_this2.setState(function(state){return{messages:[message].concat(_toConsumableArray(state.messages))};});};this.ws.onclose=function(){// when its disconnected, reconnect\n_this2.setState({ws:new WebSocket(URL)});};}},{key:\"submitMessage\",value:function submitMessage(messageString){// on submitting the ChatInput form, send the message, add it to the list and reset the input\nvar message={messages:messageString};var conn=new WebSocket(URL);conn.onmessage=function(e){console.log(e.data);};conn.onopen=function(){return conn.send(JSON.stringify(message));};this.setState(function(state){return{messages:[message].concat(_toConsumableArray(state.messages))};});}// if(window.location.pathname == \"/foodblog.html\") {\n// \tvar feed = new Instafeed({\n// \t  get: 'user',\n// \t  userId: 1665792495,\n// \t  target: 'foodpicture',\n// \t  accessToken: '1665792495.fa1fbde.80d35431a95843bdbd779a1ce9498694',\n// \t  resolution: 'standard_resolution',\n// \t  template: '<a href=\"{{link}}\" target=\"_blank\"><img src=\"{{image}}\" /></a>',\n// \t  limit: '10',\n// \t  after: function() {\n// \t\tvar el = document.getElementById('foodpicture');\n// \t\tif (el.classList) {\n// \t\t\tel.classList.add('show');\n// \t\t} else\n// \t\t\tel.className += ' ' + 'show';\n// \t\t}\n// \t});\n// \tfeed.run();\n// }\n// this.setState( state => ({ messages: [message, ...state.messages ] } ))\n// async loadResponse() {\n//   const token = '1665792495.9a6fcf8.7f3773a120884ae190265dfd3829089d';\n//   let response =\n//       await fetch(`https://api.instagram.com/v1/bonappechubs/media/recent?access_token=${token}`);\n//   if (response.status === 200) {\n//     let json = await response.json(); // (3)\n//     console.log('hello');\n//     return json;\n//   }\n// }\n},{key:\"render\",value:function render(){var _this3=this;//       <Navigation />\nvar messages=[];Object.keys(this.state.messages).forEach(function(msg,index){messages.push(React.createElement(\"p\",{key:index},React.createElement(\"em\",null,_this3.state.messages[msg].messages)));});return React.createElement(\"div\",null,React.createElement(Messages,{ws:this.ws,submitMessage:this.submitMessage}),messages);}}]);return MyApp;}(Component);export default MyApp;","map":{"version":3,"sources":["/Users/chloeshiau/Documents/chubsy.github.io/src/Home/Home.jsx"],"names":["React","Component","Messages","URL","MyApp","props","state","messages","ws","submitMessage","bind","WebSocket","onopen","console","log","onmessage","msg","message","JSON","parse","data","setState","onclose","messageString","conn","e","send","stringify","Object","keys","forEach","index","push"],"mappings":"+5BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA;AACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAO,YAAP,CAEA,GAAMC,CAAAA,GAAG,CAAG,wBAAZ,CACA;AACA;AAGA;GAEMC,CAAAA,K,+DACJ,eAAYC,KAAZ,CAAmB,uCACjB,uEAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,QAAQ,CAAE,EADC,CAEXC,EAAE,CAAE,IAFO,CAAb,CAKA;AACA,MAAKC,aAAL,CAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB,CARiB,aASlB,C,+EAEmB,iBAElB,KAAKF,EAAL,CAAU,GAAIG,CAAAA,SAAJ,CAAcR,GAAd,CAAV,CAEA,KAAKK,EAAL,CAAQI,MAAR,CAAiB,UAAM,CACrBC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACD,CAFD,CAIA,KAAKN,EAAL,CAAQO,SAAR,CAAoB,SAAAC,GAAG,CAAI,CACzB,GAAMC,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,CAAhB,CACA;AACA,MAAI,CAACC,QAAL,CAAc,SAAAf,KAAK,QAAK,CAAEC,QAAQ,EAAGU,OAAH,4BAAeX,KAAK,CAACC,QAArB,EAAV,CAAL,EAAnB,EACD,CAJD,CAKA,KAAKC,EAAL,CAAQc,OAAR,CAAkB,UAAM,CACtB;AACA,MAAI,CAACD,QAAL,CAAc,CAAEb,EAAE,CAAE,GAAIG,CAAAA,SAAJ,CAAcR,GAAd,CAAN,CAAd,EACD,CAHD,CAID,C,oDAEaoB,a,CAAe,CAC3B;AACA,GAAMN,CAAAA,OAAO,CAAG,CAAEV,QAAQ,CAAEgB,aAAZ,CAAhB,CAEA,GAAMC,CAAAA,IAAI,CAAG,GAAIb,CAAAA,SAAJ,CAAcR,GAAd,CAAb,CACAqB,IAAI,CAACT,SAAL,CAAiB,SAASU,CAAT,CAAW,CAAEZ,OAAO,CAACC,GAAR,CAAYW,CAAC,CAACL,IAAd,EAAsB,CAApD,CACAI,IAAI,CAACZ,MAAL,CAAc,iBAAMY,CAAAA,IAAI,CAACE,IAAL,CAAUR,IAAI,CAACS,SAAL,CAAeV,OAAf,CAAV,CAAN,EAAd,CACA,KAAKI,QAAL,CAAc,SAAAf,KAAK,QAAK,CAAEC,QAAQ,EAAIU,OAAJ,4BAAgBX,KAAK,CAACC,QAAtB,EAAV,CAAL,EAAnB,EACD,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;uCACS,iBACP;AACA,GAAMA,CAAAA,QAAQ,CAAG,EAAjB,CACAqB,MAAM,CAACC,IAAP,CAAY,KAAKvB,KAAL,CAAWC,QAAvB,EAAiCuB,OAAjC,CAAyC,SAACd,GAAD,CAAMe,KAAN,CAAgB,CACvDxB,QAAQ,CAACyB,IAAT,CACE,yBAAG,GAAG,CAAED,KAAR,EACE,8BAAK,MAAI,CAACzB,KAAL,CAAWC,QAAX,CAAoBS,GAApB,EAAyBT,QAA9B,CADF,CADF,EAKD,CAND,EAOA,MACE,gCACE,oBAAC,QAAD,EACE,EAAE,CAAE,KAAKC,EADX,CAEE,aAAa,CAAE,KAAKC,aAFtB,EADF,CAKGF,QALH,CADF,CASD,C,mBA1FiBN,S,EA6FpB,cAAeG,CAAAA,KAAf","sourcesContent":["import React, { Component } from \"react\";\n// import ReactDOM from \"react-dom\";\n// import Navigation from '../Navigation/Navigation';\nimport Messages from '../Messages/Messages';\nimport './Home.css';\n\nconst URL = 'ws://localhost:3000/ws';\n// var ws = new WebSocket(\"ws://localhost:3000/ws\");\n// WEBSOCKETS - transfers data through transmission control proticol (TCP)\n\n\n// REDUX - mapStateToProps is a function that holds whole store state\n\nclass MyApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      ws: null,\n    };\n\n    // this.loadResponse = this.loadResponse.bind(this);\n    this.submitMessage = this.submitMessage.bind(this);\n  }\n\n  componentDidMount() {\n\n    this.ws = new WebSocket(URL);\n\n    this.ws.onopen = () => {\n      console.log('is connected');\n    }\n\n    this.ws.onmessage = msg => {\n      const message = JSON.parse(msg.data);\n      // add to list of message\n      this.setState(state => ({ messages: [message, ...state.messages]}));\n    }\n    this.ws.onclose = () => {\n      // when its disconnected, reconnect\n      this.setState({ ws: new WebSocket(URL)})\n    }\n  }\n\n  submitMessage(messageString) {\n    // on submitting the ChatInput form, send the message, add it to the list and reset the input\n    const message = { messages: messageString };\n\n    const conn = new WebSocket(URL);\n    conn.onmessage = function(e){ console.log(e.data); };\n    conn.onopen = () => conn.send(JSON.stringify(message));\n    this.setState(state => ({ messages : [message, ...state.messages] }));\n  }\n  // if(window.location.pathname == \"/foodblog.html\") {\n  // \tvar feed = new Instafeed({\n  // \t  get: 'user',\n  // \t  userId: 1665792495,\n  // \t  target: 'foodpicture',\n  // \t  accessToken: '1665792495.fa1fbde.80d35431a95843bdbd779a1ce9498694',\n  // \t  resolution: 'standard_resolution',\n  // \t  template: '<a href=\"{{link}}\" target=\"_blank\"><img src=\"{{image}}\" /></a>',\n  // \t  limit: '10',\n  // \t  after: function() {\n  // \t\tvar el = document.getElementById('foodpicture');\n  // \t\tif (el.classList) {\n  // \t\t\tel.classList.add('show');\n  // \t\t} else\n  // \t\t\tel.className += ' ' + 'show';\n  // \t\t}\n  // \t});\n  // \tfeed.run();\n  // }\n  // this.setState( state => ({ messages: [message, ...state.messages ] } ))\n\n  // async loadResponse() {\n  //   const token = '1665792495.9a6fcf8.7f3773a120884ae190265dfd3829089d';\n  //   let response =\n  //       await fetch(`https://api.instagram.com/v1/bonappechubs/media/recent?access_token=${token}`);\n  //   if (response.status === 200) {\n  //     let json = await response.json(); // (3)\n  //     console.log('hello');\n  //     return json;\n  //   }\n  // }\n  render() {\n    //       <Navigation />\n    const messages = [];\n    Object.keys(this.state.messages).forEach((msg, index) => {\n      messages.push(\n        <p key={index}>\n          <em>{this.state.messages[msg].messages}</em>\n        </p>\n      );\n    })\n    return (\n      <div>\n        <Messages\n          ws={this.ws}\n          submitMessage={this.submitMessage}\n        />\n        {messages}\n      </div>\n    );\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}