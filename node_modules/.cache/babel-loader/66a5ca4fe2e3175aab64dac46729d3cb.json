{"ast":null,"code":"import _classCallCheck from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/chloeshiau/Documents/chubsy/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./styles/travel.less';import*as am4core from\"@amcharts/amcharts4/core\";import*as am4maps from\"@amcharts/amcharts4/maps\";import am4geodata_worldLow from\"@amcharts/amcharts4-geodata/worldLow\";var Travel=/*#__PURE__*/function(_Component){_inherits(Travel,_Component);function Travel(){_classCallCheck(this,Travel);return _possibleConstructorReturn(this,_getPrototypeOf(Travel).apply(this,arguments));}_createClass(Travel,[{key:\"componentDidMount\",value:function componentDidMount(){var map=am4core.create(\"travel-map\",am4maps.MapChart);// Set map definition\nmap.geodata=am4geodata_worldLow;// Set projection\nmap.projection=new am4maps.projections.Miller();map.maxZoomLevel=1;// Create map polygon series\nvar polygonSeries=map.series.push(new am4maps.MapPolygonSeries());// Make map load polygon (like country names) data from GeoJSON\npolygonSeries.useGeodata=true;// Configure series\nvar polygonTemplate=polygonSeries.mapPolygons.template;polygonTemplate.tooltipText=\"{name}\";polygonTemplate.fill=am4core.color(\"#BDA0C3\");// Create hover state and set alternative fill color\nvar hs=polygonTemplate.states.create(\"hover\");hs.properties.fill=am4core.color(\"#A571B0\");}// componentWillUnmount() {\n//   if (this.map) {\n//     this.chart.dispose();\n//   }\n// }\n},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"travel\"},React.createElement(\"div\",{className:\"travel-description\"},\"love the world around you!\"),React.createElement(\"div\",{className:\"travel-map\"}));}}]);return Travel;}(Component);export default Travel;","map":{"version":3,"sources":["/Users/chloeshiau/Documents/chubsy/src/travel/travel.jsx"],"names":["React","Component","am4core","am4maps","am4geodata_worldLow","Travel","map","create","MapChart","geodata","projection","projections","Miller","maxZoomLevel","polygonSeries","series","push","MapPolygonSeries","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","fill","color","hs","states","properties"],"mappings":"ulBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAO,sBAAP,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,0BAAzB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,sCAAhC,C,GAEMC,CAAAA,M,sRACgB,CAClB,GAAIC,CAAAA,GAAG,CAAGJ,OAAO,CAACK,MAAR,CAAe,YAAf,CAA6BJ,OAAO,CAACK,QAArC,CAAV,CACA;AACAF,GAAG,CAACG,OAAJ,CAAcL,mBAAd,CAEA;AACAE,GAAG,CAACI,UAAJ,CAAiB,GAAIP,CAAAA,OAAO,CAACQ,WAAR,CAAoBC,MAAxB,EAAjB,CAEAN,GAAG,CAACO,YAAJ,CAAmB,CAAnB,CAEA;AACA,GAAMC,CAAAA,aAAa,CAAGR,GAAG,CAACS,MAAJ,CAAWC,IAAX,CAAgB,GAAIb,CAAAA,OAAO,CAACc,gBAAZ,EAAhB,CAAtB,CAEA;AACAH,aAAa,CAACI,UAAd,CAA2B,IAA3B,CAEA;AACA,GAAMC,CAAAA,eAAe,CAAGL,aAAa,CAACM,WAAd,CAA0BC,QAAlD,CACAF,eAAe,CAACG,WAAhB,CAA8B,QAA9B,CACAH,eAAe,CAACI,IAAhB,CAAuBrB,OAAO,CAACsB,KAAR,CAAc,SAAd,CAAvB,CAEA;AACA,GAAMC,CAAAA,EAAE,CAAGN,eAAe,CAACO,MAAhB,CAAuBnB,MAAvB,CAA8B,OAA9B,CAAX,CACAkB,EAAE,CAACE,UAAH,CAAcJ,IAAd,CAAqBrB,OAAO,CAACsB,KAAR,CAAc,SAAd,CAArB,CAED,CAED;AACA;AACA;AACA;AACA;uCAES,CACP,MACE,4BAAK,SAAS,CAAC,QAAf,EACE,2BAAK,SAAS,CAAC,oBAAf,+BADF,CAEE,2BAAK,SAAS,CAAC,YAAf,EAFF,CADF,CAOD,C,oBA1CkBvB,S,EA6CrB,cAAeI,CAAAA,MAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './styles/travel.less';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\n\nclass Travel extends Component {\n  componentDidMount() {\n    let map = am4core.create(\"travel-map\", am4maps.MapChart);\n    // Set map definition\n    map.geodata = am4geodata_worldLow;\n\n    // Set projection\n    map.projection = new am4maps.projections.Miller();\n\n    map.maxZoomLevel = 1;\n\n    // Create map polygon series\n    const polygonSeries = map.series.push(new am4maps.MapPolygonSeries());\n\n    // Make map load polygon (like country names) data from GeoJSON\n    polygonSeries.useGeodata = true;\n\n    // Configure series\n    const polygonTemplate = polygonSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.fill = am4core.color(\"#BDA0C3\");\n\n    // Create hover state and set alternative fill color\n    const hs = polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"#A571B0\");\n\n  }\n\n  // componentWillUnmount() {\n  //   if (this.map) {\n  //     this.chart.dispose();\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className=\"travel\">\n        <div className=\"travel-description\">love the world around you!</div>\n        <div className=\"travel-map\"></div>\n      </div>\n\n    );\n  }\n}\n\nexport default Travel;\n"]},"metadata":{},"sourceType":"module"}