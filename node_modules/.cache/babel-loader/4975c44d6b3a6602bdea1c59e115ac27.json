{"ast":null,"code":"var _jsxFileName = \"/Users/chloeshiau/Documents/chubsy/src/travel/travel.jsx\";\nimport React, { Component } from 'react';\nimport './styles/travel.less';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport worldData from './initialData';\n\nclass Travel extends Component {\n  constructor(props) {\n    super(props);\n    this.changeCountry = this.changeCountry.bind(this);\n  }\n\n  changeCountry(polygonTemplate) {\n    polygonTemplate.events.on(\"hit\", function (ev) {\n      const country = ev.target.dataItem.dataContext.id;\n      console.log(country);\n      console.log(worldData[country]);\n    });\n  }\n\n  componentDidMount() {\n    am4core.useTheme(am4themes_animated);\n    let map = am4core.create(\"travel-map\", am4maps.MapChart); // Set map definition\n\n    map.geodata = am4geodata_worldLow; // Set projection\n\n    map.projection = new am4maps.projections.Miller();\n    map.maxZoomLevel = 1;\n    map.seriesContainer.draggable = false;\n    map.seriesContainer.resizable = false; // Create map polygon series\n\n    const polygonSeries = map.series.push(new am4maps.MapPolygonSeries()); // Make map load polygon (like country names) data from GeoJSON\n\n    polygonSeries.useGeodata = true; //\n    // Configure series\n\n    const polygonTemplate = polygonSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.fill = am4core.color(\"#BDA0C3\");\n    this.changeCountry(polygonTemplate); // Create hover state and set alternative fill color\n\n    const hs = polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"#A571B0\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"travel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"travel-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"love the world around you!\"), React.createElement(\"div\", {\n      className: \"travel-map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Travel;","map":{"version":3,"sources":["/Users/chloeshiau/Documents/chubsy/src/travel/travel.jsx"],"names":["React","Component","am4core","am4maps","am4themes_animated","am4geodata_worldLow","worldData","Travel","constructor","props","changeCountry","bind","polygonTemplate","events","on","ev","country","target","dataItem","dataContext","id","console","log","componentDidMount","useTheme","map","create","MapChart","geodata","projection","projections","Miller","maxZoomLevel","seriesContainer","draggable","resizable","polygonSeries","series","push","MapPolygonSeries","useGeodata","mapPolygons","template","tooltipText","fill","color","hs","states","properties","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,sBAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,SAAP,MAAsB,eAAtB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAC7BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDD,EAAAA,aAAa,CAACE,eAAD,EAAkB;AAC7BA,IAAAA,eAAe,CAACC,MAAhB,CAAuBC,EAAvB,CAA0B,KAA1B,EAAiC,UAASC,EAAT,EAAa;AAC5C,YAAMC,OAAO,GAAGD,EAAE,CAACE,MAAH,CAAUC,QAAV,CAAmBC,WAAnB,CAA+BC,EAA/C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAS,CAACU,OAAD,CAArB;AACD,KAJD;AAKD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClBrB,IAAAA,OAAO,CAACsB,QAAR,CAAiBpB,kBAAjB;AACA,QAAIqB,GAAG,GAAGvB,OAAO,CAACwB,MAAR,CAAe,YAAf,EAA6BvB,OAAO,CAACwB,QAArC,CAAV,CAFkB,CAGlB;;AACAF,IAAAA,GAAG,CAACG,OAAJ,GAAcvB,mBAAd,CAJkB,CAMlB;;AACAoB,IAAAA,GAAG,CAACI,UAAJ,GAAiB,IAAI1B,OAAO,CAAC2B,WAAR,CAAoBC,MAAxB,EAAjB;AAEAN,IAAAA,GAAG,CAACO,YAAJ,GAAmB,CAAnB;AACAP,IAAAA,GAAG,CAACQ,eAAJ,CAAoBC,SAApB,GAAgC,KAAhC;AACAT,IAAAA,GAAG,CAACQ,eAAJ,CAAoBE,SAApB,GAAgC,KAAhC,CAXkB,CAalB;;AACA,UAAMC,aAAa,GAAGX,GAAG,CAACY,MAAJ,CAAWC,IAAX,CAAgB,IAAInC,OAAO,CAACoC,gBAAZ,EAAhB,CAAtB,CAdkB,CAgBlB;;AACAH,IAAAA,aAAa,CAACI,UAAd,GAA2B,IAA3B,CAjBkB,CAkBlB;AACA;;AACA,UAAM5B,eAAe,GAAGwB,aAAa,CAACK,WAAd,CAA0BC,QAAlD;AACA9B,IAAAA,eAAe,CAAC+B,WAAhB,GAA8B,QAA9B;AACA/B,IAAAA,eAAe,CAACgC,IAAhB,GAAuB1C,OAAO,CAAC2C,KAAR,CAAc,SAAd,CAAvB;AACA,SAAKnC,aAAL,CAAmBE,eAAnB,EAvBkB,CAyBlB;;AACA,UAAMkC,EAAE,GAAGlC,eAAe,CAACmC,MAAhB,CAAuBrB,MAAvB,CAA8B,OAA9B,CAAX;AACAoB,IAAAA,EAAE,CAACE,UAAH,CAAcJ,IAAd,GAAqB1C,OAAO,CAAC2C,KAAR,CAAc,SAAd,CAArB;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AApD4B;;AAuD/B,eAAe1C,MAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './styles/travel.less';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport worldData from './initialData';\n\nclass Travel extends Component {\n  constructor(props) {\n    super(props);\n    this.changeCountry = this.changeCountry.bind(this);\n  }\n\n  changeCountry(polygonTemplate) {\n    polygonTemplate.events.on(\"hit\", function(ev) {\n      const country = ev.target.dataItem.dataContext.id;\n      console.log(country);\n      console.log(worldData[country]);\n    });\n  }\n\n  componentDidMount() {\n    am4core.useTheme(am4themes_animated);\n    let map = am4core.create(\"travel-map\", am4maps.MapChart);\n    // Set map definition\n    map.geodata = am4geodata_worldLow;\n\n    // Set projection\n    map.projection = new am4maps.projections.Miller();\n\n    map.maxZoomLevel = 1;\n    map.seriesContainer.draggable = false;\n    map.seriesContainer.resizable = false;\n\n    // Create map polygon series\n    const polygonSeries = map.series.push(new am4maps.MapPolygonSeries());\n\n    // Make map load polygon (like country names) data from GeoJSON\n    polygonSeries.useGeodata = true;\n    //\n    // Configure series\n    const polygonTemplate = polygonSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.fill = am4core.color(\"#BDA0C3\");\n    this.changeCountry(polygonTemplate);\n\n    // Create hover state and set alternative fill color\n    const hs = polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"#A571B0\");\n  }\n\n  render() {\n    return (\n      <div className=\"travel\">\n        <div className=\"travel-description\">love the world around you!</div>\n        <div className=\"travel-map\"></div>\n      </div>\n\n    );\n  }\n}\n\nexport default Travel;\n"]},"metadata":{},"sourceType":"module"}